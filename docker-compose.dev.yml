version: "3.8"

services:
  # Aplicação Next.js
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_BASE_URL=https://abitus-api.geia.vip
      - NEXT_PUBLIC_USE_API_MOCK=false
      - NEXT_PUBLIC_DEFAULT_PAGE_SIZE=10
      - NEXT_PUBLIC_MAX_PAGE_SIZE=50
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev
    networks:
      - app-network
    depends_on:
      - redis

  # Redis para cache (opcional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network
    command: redis-server --appendonly yes

  # Nginx para proxy reverso (opcional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - app-network
    depends_on:
      - app

  # Banco de dados PostgreSQL (para desenvolvimento local)
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=pessoas_desaparecidas
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - app-network

  # Adminer para gerenciar banco de dados
  adminer:
    image: adminer:4.8.1
    ports:
      - "8080:8080"
    networks:
      - app-network
    depends_on:
      - postgres

volumes:
  redis_data:
  postgres_data:

networks:
  app-network:
    driver: bridge
